import{_ as a,c as t,a3 as i,o as e}from"./chunks/framework.DqGm12tE.js";const d=JSON.parse('{"title":"useLocation hook","description":"","frontmatter":{},"headers":[],"relativePath":"routing/react-router/hooks/use-location.md","filePath":"routing/react-router/hooks/use-location.md"}'),n={name:"routing/react-router/hooks/use-location.md"};function o(h,s,l,r,p,k){return e(),t("div",null,s[0]||(s[0]=[i(`<h1 id="uselocation-hook" tabindex="-1"><code>useLocation</code> hook <a class="header-anchor" href="#uselocation-hook" aria-label="Permalink to &quot;\`useLocation\` hook&quot;">â€‹</a></h1><blockquote><p><strong>Note:</strong> When working with React Router, be aware that this guide covers only the essential aspects. For a deeper understanding and more advanced features, please refer to the official <a href="https://reactrouter.com/en/main/hooks/use-location" target="__blank">React Router documentation</a>.</p></blockquote><p>The <code>useLocation</code> hook gives access to the current location object, which contains information about the URL like pathname, search query, and state. It&#39;s helpful when you want to track the current URL or pass additional state during navigation.</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useLocation } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react-router-dom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location.pathname);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Outputs the current path, e.g., &quot;/home&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location.search);    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Outputs the query string, e.g., &quot;?query=react&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(location.state);     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Outputs any state passed with navigation</span></span></code></pre></div>`,4)]))}const u=a(n,[["render",o]]);export{d as __pageData,u as default};
