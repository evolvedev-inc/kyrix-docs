import{_ as t,c as e,a3 as i,o as s}from"./chunks/framework.DqGm12tE.js";const c=JSON.parse('{"title":"Link Component","description":"","frontmatter":{},"headers":[],"relativePath":"routing/react-router/components/link.md","filePath":"routing/react-router/components/link.md"}'),n={name:"routing/react-router/components/link.md"};function o(h,a,r,l,p,d){return s(),e("div",null,a[0]||(a[0]=[i(`<h1 id="link-component" tabindex="-1">Link Component <a class="header-anchor" href="#link-component" aria-label="Permalink to &quot;Link Component&quot;">​</a></h1><p>The <code>Link</code> component in React Router wraps the standard <code>&lt;a&gt;</code> tag but provides client-side navigation without a full page refresh. Instead of requesting new assets or reloading the entire page, it updates the URL and renders the new page&#39;s content directly on the client side.</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Link } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;react-router-dom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SomePage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Go to Home&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><blockquote><p><strong>Note:</strong> For more options check out <a href="https://reactrouter.com/en/main/components/link" target="__blank">React Router documentation</a>.</p></blockquote><h2 id="behaviour-with-kyrix" tabindex="-1">Behaviour with Kyrix <a class="header-anchor" href="#behaviour-with-kyrix" aria-label="Permalink to &quot;Behaviour with Kyrix&quot;">​</a></h2><p>In Kyrix, client-side navigation can be problematic as the client doesn&#39;t make a new request during navigation. This means we won&#39;t be able to update the metadata for the next page.</p><p>This issue is typical in most SSR applications. To fix it, we use the <code>useBlocker</code> hook from React Router.</p><h3 id="here-s-what-happens" tabindex="-1">Here&#39;s what happens <a class="header-anchor" href="#here-s-what-happens" aria-label="Permalink to &quot;Here&#39;s what happens&quot;">​</a></h3><p>When navigating—either by clicking a link or using the browser&#39;s navigation buttons—we first check if the page data is cached in <strong>React Query</strong>:</p><ul><li>If the page data is cached, navigation happens instantly.</li><li>If the page data isn&#39;t cached, a client-side request is made to the <strong>Kyrix Router</strong> to fetch the metadata and initial data for the next page.</li></ul><p>The returned data is cached, and navigation proceeds. <strong>The navigation is blocked until the data fetching is done.</strong></p><h3 id="advantages" tabindex="-1">Advantages: <a class="header-anchor" href="#advantages" aria-label="Permalink to &quot;Advantages:&quot;">​</a></h3><ul><li><strong>Fast initial page load.</strong></li><li><strong>Correct metadata updates even with client-side routing.</strong></li></ul><h2 id="questions" tabindex="-1">Questions <a class="header-anchor" href="#questions" aria-label="Permalink to &quot;Questions&quot;">​</a></h2><ul><li><a href="#">How to show a loading state during navigation until data fetching is finished?</a></li><li><a href="#">What if my router doesn&#39;t have the <code>useBlocker</code> hook?</a></li></ul>`,15)]))}const g=t(n,[["render",o]]);export{c as __pageData,g as default};
